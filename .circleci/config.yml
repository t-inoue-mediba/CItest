# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1


orbs:
  # See: https://github.com/CircleCI-Public/aws-cli-orb
  aws-cli: circleci/aws-cli@2.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    working_directory: ~/repo
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    # docker:
    #   - image: circleci/golang:1.15.8
    machine:
      image: ubuntu-1604:202104-01
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Check lint and run test"
          command: |
            docker-compose -f ./docker-compose.test.yaml build --no-cache
            docker-compose -f ./docker-compose.test.yaml run sample-api-test
          working_directory: api
  aws-cli-example:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: example
      - run:
          name: "check context"
          command: |
            echo $AWS_ACCESS_KEY_ID
            echo $AWS_SECRET_ACCESS_KEY
      - run: aws --version

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build
  aws-cli:
    jobs:
      - aws-cli-example:
          context: aws-cli-test